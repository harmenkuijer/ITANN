1.1
SELECT now() AS Date

1.2
SELECT concat (last_name, ', ', job_id) AS 'Employee and Title'
FROM employees

1.3
SELECT employee_id, last_name, salary, round((salary/100) * 115.5) AS 'New Salary'
FROM employees

1.4
SELECT employee_id, last_name, salary, round((salary * 1.155), 0) AS 'New Salary', round((salary * 1.155), 0) - salary AS Increase
FROM employees

1.5
SELECT upper(last_name) AS name, length(last_name) AS length
FROM employees
WHERE last_name LIKE 'J%' OR last_name LIKE 'A%' OR last_name LIKE 'M%'
ORDER BY last_name

1.6
SELECT first_name, last_name, length(concat(first_name, ' ', last_name))
FROM employees

1.7
SELECT last_name, round((salary * 12), 0) AS 'Annual Salary'
FROM employees
ORDER BY salary DESC

1.8
SELECT first_name, last_name, job_id
FROM employees
WHERE length(last_name) >8

1.9
SELECT last_name, salary, if(commission_pct is null, salary, (salary * 1.20)) AS new_salary
FROM employees
ORDER BY last_name

1.10
SELECT last_name, substr(job_id, 1, 2) AS 'Job Prefix'
FROM employees
WHERE job_id LIKE '%MGR'

2.1
SELECT 	round(max(salary)), round(min(salary)), round(sum(salary)), round(avg(salary))
FROM employees

2.2
SELECT 	job_id, round(max(salary)), round(min(salary)), round(sum(salary)), round(avg(salary))
FROM employees
GROUP BY job_id

2.3
SELECT job_id, count(job_id)
FROM employees
GROUP BY job_id

2.4
SELECT count(DISTINCT manager_id) AS 'Number of Managers'
FROM employees

2.5
SELECT (max(salary) - min(salary)) AS Difference
FROM employees

2.6
SELECT manager_id, min(salary) AS 'Minimum'
FROM employees
WHERE manager_id IS NOT NULL
GROUP BY manager_id
HAVING min(salary) > 6000
ORDER BY Minimum DESC

2.7
SELECT department_id
FROM employees
GROUP BY department_id
HAVING count(employee_id) > 10

2.8
SELECT  round(avg(salary), 2) as 'Average Salary', count(department_id) as Count
from employees
WHERE department_id = 90

2.9
SELECT department_id, sum(salary) as 'Total Salary' 
from employees
GROUP BY department_id

2.10
SELECT manager_id as 'Employee ID', round(avg(salary),2) as 'Average Salary' 
from employees
GROUP BY manager_id
HAVING count(employee_id) > 5

2.11
SELECT job_id, count(employee_id) as count
from employees
GROUP BY job_id
HAVING avg(salary) > 8000